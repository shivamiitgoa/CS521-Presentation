"**************************************************************************"
"Example for 'Show Op'"
"print Add "
+
"print Sub "
-
"Sub is printed below"
"**************************************************************************"
"Example of 'valid'"
"print (valid Add 1 2)"
True
"print (valid Sub 1 2)"
False
"**************************************************************************"
"Example of 'apply'"
"print (apply Add 1 2)"
3
"print (apply Div 50 5)"
10
"**************************************************************************"
"Example of 'Expr'"
"(App Add (Val 1) (App Mul (Val 2) (Val 3)))"
1+(2*3)
"**************************************************************************"
"Example of 'values'"
"print (values (App Add (Val 2) (Val 3)))"
[2,3]
"**************************************************************************"
"Example of 'evaluate'"
"print (evaluate (App Add (Val 2) (Val 3)))"
[5]
"print (evaluate (App Sub (Val 2) (Val 3)))"
[]
"**************************************************************************"
"Example of 'subs'"
"print (subs [1,2,3])"
[[],[3],[2],[2,3],[1],[1,3],[1,2],[1,2,3]]
"Example of 'interleave'"
"print (interleave 1 [2,3,4])"
[[1,2,3,4],[2,1,3,4],[2,3,1,4],[2,3,4,1]]
"Example of 'perms'"
"print (perms [1,2,3])"
[[1,2,3],[2,1,3],[2,3,1],[1,3,2],[3,1,2],[3,2,1]]
"**************************************************************************"
"Example of 'choices'"
"print (choices [1,2,3])"
[[],[3],[2],[2,3],[3,2],[1],[1,3],[3,1],[1,2],[2,1],[1,2,3],[2,1,3],[2,3,1],[1,3,2],[3,1,2],[3,2,1]]
"**************************************************************************"
"Example of 'split'"
"print (split [1,2,3,4])"
[([1],[2,3,4]),([1,2],[3,4]),([1,2,3],[4])]
"**************************************************************************"
"Example of 'combine'"
"print (combine (Val 1) (Val 2))"
[1+2,1-2,1*2,1/2]
"**************************************************************************"
"Example of 'exprs'"
"print (exprs [1, 2, 3])"
[1+(2+3),1-(2+3),1*(2+3),1/(2+3),1+(2-3),1-(2-3),1*(2-3),1/(2-3),1+(2*3),1-(2*3),1*(2*3),1/(2*3),1+(2/3),1-(2/3),1*(2/3),1/(2/3),(1+2)+3,(1+2)-3,(1+2)*3,(1+2)/3,(1-2)+3,(1-2)-3,(1-2)*3,(1-2)/3,(1*2)+3,(1*2)-3,(1*2)*3,(1*2)/3,(1/2)+3,(1/2)-3,(1/2)*3,(1/2)/3]
"**************************************************************************"
"Example of 'combine''"
"print (combine' ((Val 1), 1) ((Val 2), 2))"
[(1+2,3),(1*2,2)]
"**************************************************************************"
"Brute Force Algorithm"
"print (take 5 (reverse (solutions [1,3,7,10,25,50] 765)))"
[((50+25)+10)*((7+3)-1),((50+25)+10)*(7+(3-1)),(50+(25+10))*((7+3)-1),(50+(25+10))*(7+(3-1)),((50+25)+10)*((7-1)+3)]
"**************************************************************************"
"Optimized Algorithm 1"
"print (take 5 (reverse (solutions' [1,3,7,10,25,50] 765)))"
[((50+25)+10)*((7+3)-1),((50+25)+10)*(7+(3-1)),(50+(25+10))*((7+3)-1),(50+(25+10))*(7+(3-1)),((50+25)+10)*((7-1)+3)]
"**************************************************************************"
"Optimized Algorithm 2"
"print (take 5 (reverse (solutions'' [1,3,7,10,25,50] 765)))"
[(50*((7*(25-3))-1))/10,(50*(3+((7-1)*25)))/10,((1+50)*(3*(10+25)))/7,(50/10)*((7*(25-3))-1),(50/10)*(3+((7-1)*25))]
"**************************************************************************"
